EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
add-2.com -- emu8086 assembler version: 4.08  
 
[ 01/12/2022  --  02:11:12 È.Ù ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       name "add-2"
[   2]        :                                       
[   3]        :                                       ; this example calculates the sum of a vector with
[   4]        :                                       ; another vector and saves result in third vector.
[   5]        :                                       
[   6]        :                                       ; you can see the result if you click the "vars" button.
[   7]        :                                       ; set elements for vec1, vec2 and vec3 to 4 and show as "signed".
[   8]        :                                       
[   9]        :                                       org 100h
[  10]        :                                       
[  11]    0100: EB 0C                                 jmp start
[  12]        :                                       
[  13]    0102: 01 02 05 06                           vec1 db 1, 2, 5, 6
[  14]    0106: 03 05 06 01                           vec2 db 3, 5, 6, 1
[  15]    010A: 00 00 00 00                           vec3 db ?, ?, ?, ?
[  16]        :                                       
[  17]    010E:                                       start:
[  18]        :                                       
[  19]    010E: BE 02 01                              lea si, vec1
[  20]    0111: BB 06 01                              lea bx, vec2
[  21]    0114: BF 0A 01                              lea di, vec3
[  22]        :                                       
[  23]    0117: B9 04 00                              mov cx, 4
[  24]        :                                       
[  25]    011A:                                       sum:
[  26]    011A: 8A 04                                 mov al, [si]
[  27]    011C: 02 07                                 add al, [bx]
[  28]    011E: 88 05                                 mov [di], al
[  29]        :                                       
[  30]    0120: 46                                    inc si
[  31]    0121: 43                                    inc bx
[  32]    0122: 47                                    inc di
[  33]        :                                       
[  34]    0123: E2 F5                                 loop sum
[  35]        :                                       
[  36]    0125: C3                                    ret
[  37]        :                                       
[  38]        :                                       
[  39]        :                                       
[  40]        :                                       
[  41]        :                                       
 
===================================================================================================
 




===================================================================================================
